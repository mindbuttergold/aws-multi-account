name: Lint and Test Infrastructure Setup

on: 
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

jobs:
  lint-and-test-infra-code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Get Terraform and Terragrunt Versions
        id: get-versions
        run: |
          TERRAFORM_VERSION=$(grep "terraform_version" ${GITHUB_WORKSPACE}/root.hcl | head -1 | awk -F'"' '{print $2}' | sed 's/~> //' | sed -E 's/([0-9]+\.[0-9]+)\.[0-9x]+/\1.0/')

          TERRAGRUNT_VERSION=$(grep "terragrunt_version" ${GITHUB_WORKSPACE}/root.hcl | head -1 | awk -F'"' '{print $2}' | sed 's/~> //' | sed -E 's/([0-9]+\.[0-9]+)\.[0-9x]+/\1.0/')
          
          echo "terraform_version=$TERRAFORM_VERSION" >> $GITHUB_OUTPUT
          echo "terragrunt_version=$TERRAGRUNT_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.get-versions.outputs.terraform_version }}

      - name: Setup Terragrunt
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_version: ${{ steps.get-versions.outputs.terragrunt_version }}
          tf_path: "terraform"

      - name: Setup Terraform and Terragrunt Cache
        uses: actions/cache@v4
        with:
          path: |
            /tmp/terragrunt
            ~/.terraform.d
            ~/.terragrunt
          key: ${{ runner.os }}-tf-tg-${{ steps.get-versions.outputs.terraform_version }}-${{ steps.get-versions.outputs.terragrunt_version }}
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Python Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
            ~/.cache/hatch
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.lock', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-

      - name: Setup Hatch and UV
        run: |
          pip install hatch uv
      
      - name: Create Hatch Environment
        run: hatch env create env
      
      - name: Setup Infra Test Dependencies
        run: hatch run env:install-infra-deps
      
      - name: Lint Infra Setup
        run: hatch run env:lint-infra

      - name: Test Infra Setup
        run: hatch run env:test-infra
